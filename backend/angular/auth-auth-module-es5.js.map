{"version":3,"sources":["src/app/auth/login/login.component.html","src/app/auth/signup/signup.component.html","src/app/auth/auth-routing.module.ts","src/app/auth/auth.module.ts","src/app/auth/login/login.component.css","src/app/auth/login/login.component.ts","src/app/auth/signup/signup.component.css","src/app/auth/signup/signup.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"\\r\\n\\r\\n<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form (submit)=\\\"onLogin(loginForm)\\\" #loginForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        name=\\\"email\\\"\\r\\n        ngModel\\r\\n        type=\\\"email\\\"\\r\\n        placeholder=\\\"E-mail\\\" #emailInput=\\\"ngModel\\\" required email>\\r\\n        <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a valid email.</mat-error>\\r\\n        <!-->instead of \\\"title.invalid\\\"<-->\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        type=\\\"password\\\"\\r\\n        name=\\\"password\\\"\\r\\n        ngModel\\r\\n        placeholder=\\\"Password\\\" #passwordInput=\\\"ngModel\\\" required>\\r\\n        <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter a valid password.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button\\r\\n      mat-raised-button\\r\\n      color = \\\"accent\\\"\\r\\n      type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Login</button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","export default \"\\r\\n\\r\\n<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form (submit)=\\\"onSignup(signupForm)\\\" #signupForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        name=\\\"email\\\"\\r\\n        ngModel\\r\\n        type=\\\"email\\\"\\r\\n        placeholder=\\\"E-mail\\\" #emailInput=\\\"ngModel\\\" required email>\\r\\n        <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a valid email.</mat-error>\\r\\n        <!-->instead of \\\"title.invalid\\\"<-->\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        type=\\\"password\\\"\\r\\n        name=\\\"password\\\"\\r\\n        ngModel\\r\\n        placeholder=\\\"Password\\\" #passwordInput=\\\"ngModel\\\" required>\\r\\n        <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter a valid password.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button\\r\\n      mat-raised-button\\r\\n      color = \\\"accent\\\"\\r\\n      type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Signup</button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'signup', component: SignupComponent}\r\n]\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes) //register some child routes w/c will be merged with root router at AppRoutingModule\r\n  ],\r\n\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class AuthRoutingModule{\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms'; //using framwork for NgModel directive\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { AngularMaterialModule } from '../angular-material.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent\r\n\r\n  ],\r\n  imports: [\r\n\r\n    CommonModule,\r\n    AngularMaterialModule,\r\n    FormsModule,\r\n    AuthRoutingModule\r\n\r\n  ]\r\n})\r\n\r\nexport class AuthModule{}\r\n","export default \"mat-form-field{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGR7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbm1hdC1zcGlubmVye1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n\r\n  templateUrl:'./login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit, OnDestroy{\r\n  isLoading = false;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService: AuthService){}\r\n\r\n  onLogin(form: NgForm){\r\n    //console.log(form.value);\r\n    if(form.invalid){\r\n      return;\r\n    }\r\n    this.isLoading=true;\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\r\n      authStatus=>{\r\n        this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","export default \"mat-form-field{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxke1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtc3Bpbm5lcntcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n\r\n  templateUrl:'./signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\n\r\nexport class SignupComponent implements OnInit, OnDestroy{\r\n  isLoading = false;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService: AuthService){}\r\n\r\n  onSignup(form: NgForm){\r\n    if(form.invalid){\r\n      return;\r\n    }\r\n    this.isLoading=true;\r\n    this.authService.createUser(form.value.email, form.value.password); //after putting the subscribe method w/ error handling arg,\r\n    //.subscribe error method removed and put it back into the auth service\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\r\n      authStatus=>{\r\n        this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}