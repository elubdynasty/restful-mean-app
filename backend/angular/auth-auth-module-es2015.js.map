{"version":3,"sources":["./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.css","./src/app/auth/login/login.component.ts","./src/app/auth/signup/signup.component.css","./src/app/auth/signup/signup.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["export default \"\\r\\n\\r\\n<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form (submit)=\\\"onLogin(loginForm)\\\" #loginForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        name=\\\"email\\\"\\r\\n        ngModel\\r\\n        type=\\\"email\\\"\\r\\n        placeholder=\\\"E-mail\\\" #emailInput=\\\"ngModel\\\" required email>\\r\\n        <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a valid email.</mat-error>\\r\\n        <!-->instead of \\\"title.invalid\\\"<-->\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        type=\\\"password\\\"\\r\\n        name=\\\"password\\\"\\r\\n        ngModel\\r\\n        placeholder=\\\"Password\\\" #passwordInput=\\\"ngModel\\\" required>\\r\\n        <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter a valid password.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button\\r\\n      mat-raised-button\\r\\n      color = \\\"accent\\\"\\r\\n      type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Login</button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","export default \"\\r\\n\\r\\n<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form (submit)=\\\"onSignup(signupForm)\\\" #signupForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        name=\\\"email\\\"\\r\\n        ngModel\\r\\n        type=\\\"email\\\"\\r\\n        placeholder=\\\"E-mail\\\" #emailInput=\\\"ngModel\\\" required email>\\r\\n        <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a valid email.</mat-error>\\r\\n        <!-->instead of \\\"title.invalid\\\"<-->\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        type=\\\"password\\\"\\r\\n        name=\\\"password\\\"\\r\\n        ngModel\\r\\n        placeholder=\\\"Password\\\" #passwordInput=\\\"ngModel\\\" required>\\r\\n        <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter a valid password.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button\\r\\n      mat-raised-button\\r\\n      color = \\\"accent\\\"\\r\\n      type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Signup</button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'signup', component: SignupComponent}\r\n]\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes) //register some child routes w/c will be merged with root router at AppRoutingModule\r\n  ],\r\n\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class AuthRoutingModule{\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms'; //using framwork for NgModel directive\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { AngularMaterialModule } from '../angular-material.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent\r\n\r\n  ],\r\n  imports: [\r\n\r\n    CommonModule,\r\n    AngularMaterialModule,\r\n    FormsModule,\r\n    AuthRoutingModule\r\n\r\n  ]\r\n})\r\n\r\nexport class AuthModule{}\r\n","export default \"mat-form-field{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGR7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbm1hdC1zcGlubmVye1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n\r\n  templateUrl:'./login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit, OnDestroy{\r\n  isLoading = false;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService: AuthService){}\r\n\r\n  onLogin(form: NgForm){\r\n    //console.log(form.value);\r\n    if(form.invalid){\r\n      return;\r\n    }\r\n    this.isLoading=true;\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\r\n      authStatus=>{\r\n        this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","export default \"mat-form-field{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxke1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtc3Bpbm5lcntcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n\r\n  templateUrl:'./signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\n\r\nexport class SignupComponent implements OnInit, OnDestroy{\r\n  isLoading = false;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService: AuthService){}\r\n\r\n  onSignup(form: NgForm){\r\n    if(form.invalid){\r\n      return;\r\n    }\r\n    this.isLoading=true;\r\n    this.authService.createUser(form.value.email, form.value.password); //after putting the subscribe method w/ error handling arg,\r\n    //.subscribe error method removed and put it back into the auth service\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\r\n      authStatus=>{\r\n        this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}