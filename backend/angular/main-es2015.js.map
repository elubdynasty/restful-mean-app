{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/error/error.component.html","./src/app/header/header.component.html","./src/app/posts/post-create/post-create.component.html","./src/app/posts/post-list/post-list.component.html","./node_modules/tslib/tslib.es6.js","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/error-interceptor.ts","./src/app/error/error.component.css","./src/app/error/error.component.ts","./src/app/header/header.component.css","./src/app/header/header.component.ts","./src/app/posts.module.ts","./src/app/posts/post-create/mime-type.validator.ts","./src/app/posts/post-create/post-create.component.css","./src/app/posts/post-create/post-create.component.ts","./src/app/posts/post-list/post-list.component.css","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/posts.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["var map = {\n\t\"./auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\",\n\t\t\"auth-auth-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","export default \"<app-header></app-header>\\r\\n<main>\\r\\n\\r\\n  <!-->\\r\\n  <app-post-create (postCreated)=\\\"onPostAdded($event)\\\"></app-post-create> $event - to pass on the data you're getting. An event-binding to listen to postCreated\\r\\n  <app-post-list [posts]=\\\"storedPosts\\\"></app-post-list>\\r\\n  Commented 9/8/19 no need for event-prop binding due to PostsService connection\\r\\n\\r\\n  <app-post-create></app-post-create>\\r\\n  <app-post-list></app-post-list><-->\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n</main>\\r\\n\"","export default \"<h1 mat-dialog-title>An Error occurred!</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p mat-body-1>{{ data.message }}</p>\\r\\n</div>\\r\\n\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button mat-dialog-close>Okay</button>\\r\\n</div>\\r\\n\"","export default \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <span><a routerLink=\\\"/\\\">MyMessage</a></span>\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n  <ul>\\r\\n    <li *ngIf=\\\"userisAuthenticated\\\">\\r\\n      <a mat-button routerLink=\\\"/create\\\" routerLinkActive=\\\"mat-accent\\\">New Post</a>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"!userisAuthenticated\\\">\\r\\n      <a mat-button routerLink=\\\"/auth/login\\\" routerLinkActive=\\\"mat-accent\\\">Login</a>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"!userisAuthenticated\\\">\\r\\n      <a mat-button routerLink=\\\"/auth/signup\\\" routerLinkActive=\\\"mat-accent\\\">Sign-up</a>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"userisAuthenticated\\\">\\r\\n      <button mat-button (click)=\\\"onLogout()\\\">Logout</button>\\r\\n    </li>\\r\\n  </ul>\\r\\n</mat-toolbar>\\r\\n\"","export default \"<h2>The Post Create Component</h2>\\r\\n\\r\\n\\r\\n<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onSavePost()\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        type=\\\"text\\\"\\r\\n        formControlName=\\\"title\\\"\\r\\n        placeholder=\\\"Post Title\\\">\\r\\n        <mat-error *ngIf=\\\"form.get('title').invalid\\\">Please enter a post title.</mat-error>\\r\\n        <!-->instead of \\\"title.invalid\\\"<-->\\r\\n    </mat-form-field>\\r\\n    <div>\\r\\n      <button mat-stroked-button type=\\\"button\\\" (click)=\\\"filePicker.click()\\\">Pick image</button>\\r\\n      <input type=\\\"file\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\r\\n    </div>\\r\\n    <div class=\\\"img-display\\\" >\\r\\n      <img [src]=\\\"imgDisplay\\\" [alt]=\\\"form.value.title\\\" *ngIf=\\\"imgDisplay !== '' && imgDisplay && form.get('image').valid\\\">\\r\\n    </div>\\r\\n    <mat-form-field>\\r\\n      <textarea\\r\\n        matInput\\r\\n        rows=\\\"4\\\"\\r\\n        formControlName=\\\"content\\\"\\r\\n        placeholder=\\\"Post Content\\\">\\r\\n      </textarea>\\r\\n        <mat-error *ngIf=\\\"form.get('content').invalid\\\">Please enter a post content.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button\\r\\n      mat-raised-button\\r\\n      color = \\\"primary\\\"\\r\\n      type=\\\"submit\\\">Save Post</button>\\r\\n\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","export default \"\\r\\n<!--><mat-accordion><-->\\r\\n<mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n<mat-accordion multi=\\\"true\\\" *ngIf=\\\"posts.length > 0 && !isLoading\\\">\\r\\n  <mat-expansion-panel *ngFor=\\\"let post of posts\\\"> <!-- *ngFor loops this element><-->\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        {{ post.title }}\\r\\n      </mat-panel-title>\\r\\n    </mat-expansion-panel-header>\\r\\n    <div class=\\\"post-image\\\">\\r\\n      <img [src]=\\\"post.imagePath\\\" [alt]=\\\"post.title\\\">\\r\\n    </div>\\r\\n    <p>{{ post.content }}</p>\\r\\n\\r\\n    <mat-action-row *ngIf = \\\"userisAuthenticated && userId === post.creator\\\">\\r\\n      <a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/edit',post.id]\\\">EDIT</a>\\r\\n      <button mat-button color=\\\"warn\\\" (click)='onDelete(post.id)'>DELETE</button>\\r\\n    </mat-action-row>\\r\\n\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n<mat-paginator [length]=\\\"totalPosts\\\" [pageSize]=\\\"postsPerPage\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"onChangedPage($event)\\\" *ngIf=\\\"posts.length > 0\\\"></mat-paginator>\\r\\n<p class=info-text *ngIf=\\\"posts.length <= 0 && !isLoading\\\">No posts added yet!</p>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\r\nimport {NgModule} from '@angular/core';\r\nimport { MatInputModule, MatCardModule, MatButtonModule, MatToolbarModule, MatExpansionModule,MatProgressSpinnerModule, MatPaginatorModule, MatDialogModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule\r\n  ],\r\n  exports: [ //to be usable in another module (need to be re-exported)\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule\r\n  ]\r\n})\r\n\r\n\r\n\r\nexport class AngularMaterialModule{\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PostListComponent } from './posts/post-list/post-list.component';\r\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\r\nimport {AuthGuard} from './auth/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PostListComponent }, //'' means main page\r\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard]}, //localhost:4200/create\r\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard]},\r\n  { path: 'auth', loadChildren: './auth/auth.module#AuthModule'} //lazily loads the child module located at AuthModule\r\n    //alternative path () => import('./auth/auth.module').then(m => m.AuthModule)\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    AuthGuard\r\n  ]\r\n})\r\n\r\nexport class AppRoutingModule {  }\r\n","export default \"main{\\r\\n\\r\\n  width: 80%;\\r\\n  margin: 16px auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsVUFBVTtFQUNWLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWFpbntcclxuXHJcbiAgd2lkdGg6IDgwJTtcclxuICBtYXJnaW46IDE2cHggYXV0bztcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n//import { Post } from './posts/post.model';\n\n//Decorator starts with @\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  constructor (private authService: AuthService){}\n  //title = 'vincemeanprac1';\n  /*storedPosts: Post[]=[];\n\n  onPostAdded(post: Post){\n    this.storedPosts.push(post);\n  } Commented 9/8/19 bec. event-prop binding no longer needed*/\n  ngOnInit(){\n    this.authService.autoAuthUser();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { PostsModule } from './posts.module';\r\nimport { AuthInterceptor } from './auth/auth-interceptor';\r\nimport { ErrorInterceptor } from './error-interceptor';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    ErrorComponent,\r\n  ],\r\n  imports: [\r\n\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AngularMaterialModule,\r\n    PostsModule\r\n\r\n  ],\r\n  //any collection of services is for providers.\r\n  //allows Angular to find the service\r\n  //Option 1 if you're not using @Injectable Decorator for the Service\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ErrorComponent] //informs Angular that this comp is going to get used, eventhough Ang can't see it\r\n})\r\nexport class AppModule { }\r\n\r\n//it defines the feature\r\n","import {HttpInterceptor, HttpRequest, HttpHandler} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n  constructor(private authService: AuthService){}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler){ //Angular will call this method for req leaving the App. Interceptor works a lot like middleware, just for outgoing instead of incoming requests.\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set('Authorization', \"Bearer \" + authToken) //extracting the token from Authorization on the back-end (check-auth)\r\n    });\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {AuthService} from './auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n\r\n  constructor(private authService: AuthService, private router: Router){}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | Observable<boolean> | Promise<boolean>{\r\n    const isAuth = this.authService.getisAuth();\r\n    if(!isAuth){\r\n      this.router.navigate(['./auth/login']);\r\n    }\r\n    return isAuth;\r\n    //throw new Error('Method not implemented');\r\n  }\r\n}\r\n","//connecting Angular Auth service to the backend\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthData } from './auth-data.model';\r\nimport { Subject } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst BACKEND_URL = environment.apiUrl + \"/user/\"; //common URL paths for HTTP API\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private token: string; //adding the token to auth requests\r\n  private tokenTimer: any;\r\n  private userId: string;\r\n  private authStatusListener = new Subject<boolean>(); //is the user authenticated or not\r\n\r\n  constructor(private http: HttpClient, private router: Router){}\r\n\r\n  getToken(){\r\n    return this.token;\r\n  }\r\n\r\n  getisAuth(){\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getUserId(){\r\n    return this.userId;\r\n  }\r\n\r\n  getAuthStatusListener(){ //return the observable\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  createUser(email: string, password: string){\r\n    const authData: AuthData = {email: email, password: password};\r\n    this.http.post(BACKEND_URL + 'signup', authData)\r\n    .subscribe(()=>{\r\n      this.router.navigate[\"/\"]; //redirection on signup comp. when signup successful\r\n    }, error=>{\r\n      this.authStatusListener.next(); //push the false value to entire app and inform that this will not be authenticated\r\n    });\r\n  }\r\n\r\n  login(email: string, password: string){\r\n    const authData: AuthData = {email: email, password: password};\r\n    this.http.post<{token: string, expiresIn: number, userId: string}>(BACKEND_URL + 'login', authData)\r\n    .subscribe(response=>{\r\n      const token = response.token;\r\n      this.token = token;\r\n      if(token){\r\n        const expiresInDuration = response.expiresIn;\r\n        this.setAuthTimer(expiresInDuration);\r\n        this.isAuthenticated=true;\r\n        this.userId = response.userId;\r\n        this.authStatusListener.next(true); //informing everyone w/c component is interested abt the user being authenticated\r\n        const now = new Date();\r\n        const expirationDate = new Date(now.getTime() + expiresInDuration*1000);\r\n        console.log(expirationDate);\r\n        this.saveAuthData(token, expirationDate, this.userId);\r\n        this.router.navigate(['/']); //nav back to the homepage\r\n      }\r\n    }, error=>{\r\n      this.authStatusListener.next(); //push the false value to entire app and inform that this will not be authenticated\r\n    });\r\n  }\r\n\r\n  autoAuthUser(){\r\n    //automatically auth the user if we got the info for it in the localStorage\r\n    const authInformation = this.getAuthData();\r\n    if(!authInformation){\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\r\n    //console.log(authInformation, expiresIn);\r\n    if(expiresIn > 0){\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.userId = authInformation.userId;\r\n      this.setAuthTimer(expiresIn/1000);\r\n      this.authStatusListener.next(true);\r\n\r\n    }\r\n  }\r\n\r\n  logout(){\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    //informing everyone w/c component is interested abt the user being not authenticated anymore (exiting login)\r\n    this.userId = null;\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearAuthData();\r\n    this.router.navigate(['/']); //nav back to the homepage\r\n\r\n  }\r\n\r\n  private setAuthTimer(duration: number){\r\n    console.log('Setting timer: '+ duration);\r\n    this.tokenTimer = setTimeout(()=>{\r\n      this.logout();\r\n    }, duration * 1000);\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date, userId: string){\r\n    localStorage.setItem('token', token);  //data will be serialized and stored in local storage\r\n    localStorage.setItem('expiration', expirationDate.toISOString());\r\n    localStorage.setItem('userId', userId);\r\n  }\r\n\r\n  private clearAuthData(){\r\n    localStorage.removeItem('token');  //data will be serialized and stored in local storage\r\n    localStorage.removeItem('expiration');\r\n    localStorage.removeItem('userId');\r\n  }\r\n\r\n  private getAuthData(){\r\n    const token = localStorage.getItem('token');\r\n    const expirationDate= localStorage.getItem('expiration');\r\n    const userId = localStorage.getItem('userId');\r\n    if(!token || !expirationDate){\r\n      return;\r\n    }\r\n    return{\r\n      token: token,\r\n      expirationDate: new Date(expirationDate),\r\n      userId: userId\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse} from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport {MatDialog /*, MatDialogRef, MAT_DIALOG_DATA*/} from '@angular/material';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor{\r\n\r\n  constructor(private dialog: MatDialog){} //inject the dialog service and import it from @angular mat\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler){ //Angular will call this method for req leaving the App. Interceptor works a lot like middleware, just for outgoing instead of incoming requests.\r\n\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse)=>{\r\n        let errorMessage = 'An unknown error occurred!';\r\n\r\n        //console.log(error);\r\n        //alert(error.error.message);\r\n\r\n        if(error.error.message){\r\n          errorMessage = error.error.message;\r\n        }\r\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\r\n        return throwError(error); //returning an observable\r\n      })\r\n    );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5jc3MifQ== */\"","\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  //selector: 'app-root',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\n\r\nexport class ErrorComponent{\r\n  //message = 'An unknown error occurred!';\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}){} //USING MAT DIALOG DATA TOKEN to identify this data you're passing around\r\n}\r\n","export default \"ul {\\r\\n  list-style: none;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nul{\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInVsIHtcclxuICBsaXN0LXN0eWxlOiBub25lO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5hIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG51bHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG4iXX0= */\"","import { Component,OnInit,OnDestroy } from '@angular/core';\r\nimport {AuthService} from '../auth/auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\n\r\n\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  userisAuthenticated = false;\r\n\r\n  private authListenerSubs: Subscription;\r\n  constructor(private authService: AuthService){}\r\n\r\n\r\n  ngOnInit(){ //setting up the subscription to that AuthStatusListener\r\n    this.userisAuthenticated=this.authService.getisAuth();\r\n    this.authListenerSubs = this.authService\r\n    .getAuthStatusListener()\r\n    .subscribe(isAuthenticated => {\r\n      this.userisAuthenticated = isAuthenticated;\r\n    });\r\n  }\r\n\r\n  onLogout(){\r\n    this.authService.logout(); //should clear the token and inform the interested part of the page,\r\n                               //it's about to change the authentication status\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authListenerSubs.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { PostCreateComponent } from './posts/post-create/post-create.component';  //need to explicitly register this component so that the build process will able to scan the ts with app-post-create selector on it\r\nimport { PostListComponent } from './posts/post-list/post-list.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\nimport { RouterModule} from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [ //to be usable in another module (need to be re-exported)\r\n    PostCreateComponent,\r\n    PostListComponent\r\n  ],\r\n\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class PostsModule{}\r\n","//validator that validates the img mime-type if\r\n//this is e.g (.jpg or .png)\r\n//Logic behind this validator\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer, of} from 'rxjs';\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => { //async validator that wraps with promises/observable (Generic type).\r\n  if(typeof(control.value)==='string'){\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = Observable.create((observer: Observer<{ [key: string]: any }>) => {\r\n    //rxjs gives something w/c allows the coder to convert this into observable. Thus, u can create Observable from scratch\r\n    //this observer is simply a tool you use to control when observable emits new data\r\n    fileReader.addEventListener(\"loadend\", () => { //equiv to fileReader.onloadend()\r\n      //MIME type validation\r\n      const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0,4); //allows us to access or to read certain patterns in the file but also in the form metadata that we can then use to parse the MIME type\r\n      let header = \"\";\r\n      let isValid = false;\r\n\r\n      for(let i=0; i < arr.length; i++){\r\n        //extract some info on the arr\r\n        header += arr[i].toString(16); //convert this lists of array into hexadecimal string\r\n      }\r\n\r\n      switch(header){\r\n        case \"89504e47\":\r\n          isValid = true;\r\n          break;\r\n        case \"ffd8ffe0\":\r\n        case \"ffd8ffe1\":\r\n        case \"ffd8ffe2\":\r\n        case \"ffd8ffe3\":\r\n        case \"ffd8ffe8\":\r\n          isValid = true;\r\n          break;\r\n        default:\r\n          isValid = false; // Or you can use the blob.type as fallback\r\n          break;\r\n      }\r\n      if(isValid){\r\n        observer.next(null); //to emit a new value\r\n      } else{\r\n        observer.next( {invalidMimeType: true} );\r\n      }\r\n      observer.complete(); //letting subscribers know that these observers are done\r\n    });;\r\n    fileReader.readAsArrayBuffer(file); //allow to access the mimeType\r\n  });\r\n  return frObs;\r\n};\r\n","export default \"\\r\\nmat-form-field, textarea{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\ninput[type=\\\"file\\\"]{\\r\\n  visibility: hidden;\\r\\n}\\r\\n\\r\\n.img-display{\\r\\n  height: 5 rem;\\r\\n  margin: 1rem 0;\\r\\n}\\r\\n\\r\\n.img-display img{\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsY0FBYztBQUNoQjs7QUFFQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3QtY3JlYXRlL3Bvc3QtY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxubWF0LWZvcm0tZmllbGQsIHRleHRhcmVhe1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtc3Bpbm5lcntcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJmaWxlXCJde1xyXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcclxufVxyXG5cclxuLmltZy1kaXNwbGF5e1xyXG4gIGhlaWdodDogNSByZW07XHJcbiAgbWFyZ2luOiAxcmVtIDA7XHJcbn1cclxuXHJcbi5pbWctZGlzcGxheSBpbWd7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","//more than just the template but it needs the template\r\nimport { Component, OnInit, OnDestroy /*EventEmitter, Output*/} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Post } from '../post.model';\r\nimport { PostsService } from '../posts.service';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { mimeType } from './mime-type.validator';\r\nimport { Subscription } from 'rxjs';\r\nimport {AuthService} from '../../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-post-create',\r\n  templateUrl:'./post-create.component.html',\r\n  styleUrls: ['./post-create.component.css']\r\n})\r\n\r\n //Reference as the url instead to cop-paste the html body\r\n\r\nexport class PostCreateComponent implements OnInit, OnDestroy {\r\n  //a variable within the class that doesn't need var, const or let\r\n\r\n  //enteredTitle=\"\";\r\n  //enteredContent=\"\";\r\n  //(Commented as of 9/8/19 due to added PostsService) @Output() postCreated = new EventEmitter<Post>(); generic type with Post (we can pass addt'l data on what data type this one works with)\r\n  //this will emit to the listener from the outside\r\n  //newPost = 'NO CONTENT';\r\n  isLoading=false;\r\n  form: FormGroup;\r\n  imgDisplay: string;\r\n  mode ='create';\r\n  private postId: string;\r\n  post: Post;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public postsService: PostsService, public route: ActivatedRoute, private authService: AuthService){} //this router pkg, ActivatedRoute gives us this activated route obj and this holds some important info abt the route we're currently on\r\n\r\n  ngOnInit(){ //Good for initialization tasks\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\r\n      authStatus=>{\r\n        this.isLoading = false;\r\n      }\r\n    ); //setup an AuthStatusListener\r\n    this.form = new FormGroup({\r\n      title: new FormControl(null,\r\n        {\r\n          validators: [Validators.required,Validators.minLength(3)]\r\n        }), //first arg is beginning form state. 2nd arg to attach validators\r\n      content: new FormControl(null,\r\n        {\r\n          validators: [Validators.required]\r\n        }),\r\n\r\n      image: new FormControl(null,\r\n        {\r\n          validators: [Validators.required],\r\n          asyncValidators: [mimeType]\r\n        })\r\n\r\n    });\r\n\r\n    this.route.paramMap.subscribe((paramMap: ParamMap)=>{\r\n      if(paramMap.has('postId')){\r\n        this.mode = 'edit';\r\n        this.postId=paramMap.get('postId');\r\n        this.isLoading=true;\r\n        this.postsService.getPost(this.postId).subscribe(postData=>{\r\n          this.isLoading=false;\r\n          this.post = {\r\n            id: postData._id,\r\n            title: postData.title,\r\n            content: postData.content,\r\n            imagePath: postData.imagePath,\r\n            creator: postData.creator\r\n          };\r\n          this.form.setValue({\r\n            title: this.post.title,\r\n            content: this.post.content,\r\n            image: this.post.imagePath\r\n          });\r\n       });\r\n\r\n      }\r\n      else{\r\n        this.mode='create';\r\n        this.postId=null;\r\n      }\r\n    });  //can listen to changes in th route url or in the params.. therefore react to that & update the UI\r\n  }\r\n\r\n  //adding image controls to store the image\r\n  //no need to import Event bcos its a Javascript type\r\n  onImagePicked(event: Event){\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({image: file}); //unlike setValue, you set the value for the single input or control\r\n    this.form.get('image').updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imgDisplay = reader.result as string;\r\n    } //async code. It takes a while why the author uses callback f(x)\r\n    reader.readAsDataURL(file); //kickoff the process w/c will lead to the event that being fired above\r\n\r\n    //console.log(file);\r\n    //console.log(this.form);\r\n  }\r\n\r\n  onSavePost(){\r\n\r\n    //Getting user input\r\n    //this.newPost = this.enteredValue; Instead of putting postInput.value\r\n    if(this.form.invalid){\r\n      return;\r\n    }\r\n    /*const post: Post = {\r\n      title: form.value.title,  //this.enteredTitle\r\n      content: form.value.content\r\n    }; Don't need this because it's initialized already at PostsService*/\r\n    this.isLoading=true;\r\n    if(this.mode==='create'){\r\n      this.postsService.addPost(\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      );\r\n\r\n    } else{\r\n      this.postsService.updatePost(\r\n        this.postId,\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      );\r\n    }\r\n\r\n    this.form.reset(); //auto-reset the form after addPost\r\n    //(Commented as of 9/8/19 due to added PostsService) this.postCreated.emit(post); passes the post as an argument (but no longer needed because there;s a service already)\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe(); //to prevent memory leaks\r\n\r\n  }\r\n}\r\n","export default \":host{\\r\\n  display: block;\\r\\n  margin-top: 16px;\\r\\n}\\r\\n\\r\\n.info-text{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nmat-spinner{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.post-image{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.post-image img{\\r\\n  width: 100%;\\r\\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\nmat-paginator{\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1saXN0L3Bvc3QtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7RUFDWCwwQ0FBMEM7QUFDNUM7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9wb3N0cy9wb3N0LWxpc3QvcG9zdC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tdG9wOiAxNnB4O1xyXG59XHJcblxyXG4uaW5mby10ZXh0e1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxubWF0LXNwaW5uZXJ7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG4ucG9zdC1pbWFnZXtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnBvc3QtaW1hZ2UgaW1ne1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJveC1zaGFkb3c6IDFweCAxcHggNXB4IHJnYmEoMCwgMCwgMCwgMC41KTtcclxufVxyXG5cclxubWF0LXBhZ2luYXRvcntcclxuICBtYXJnaW4tdG9wOiAxcmVtO1xyXG59XHJcbiJdfQ== */\"","import { Component, /*Input,*/ OnInit,OnDestroy} from '@angular/core';\r\nimport { PageEvent } from '@angular/material';\r\nimport { Post } from '../post.model';\r\nimport { PostsService } from '../posts.service';\r\nimport {AuthService} from '../../auth/auth.service';\r\nimport { Subscription } from 'rxjs'; //store subscription in the new property\r\n\r\n@Component({\r\n  selector: 'app-post-list',\r\n  templateUrl:'./post-list.component.html',\r\n  styleUrls: ['./post-list.component.css']\r\n})\r\n\r\n //Reference as the url instead to cop-paste the html body\r\n\r\nexport class PostListComponent implements OnInit, OnDestroy { //lifecycle hooks\r\n//  posts = [\r\n//    {title: '1st Post', content: 'This is the 1st post\\'s content'},\r\n//    {title: '2nd Post', content: 'This is the 2nd post\\'s content'},\r\n//    {title: '3rd Post', content: 'This is the 3rd post\\'s content'}\r\n//  ];\r\n\r\n  /*@Input()*/\r\n  posts: Post[]=[];\r\n  isLoading = false;\r\n  totalPosts = 0;\r\n  postsPerPage = 2;\r\n  currentPage = 1;\r\n  pageSizeOptions = [1,2,5,10];\r\n  userId: string;\r\n  userisAuthenticated = false;\r\n\r\n//bind the post from the outside by adding another Decorator Input\r\n//Dependency injection from PostsService to the components\r\n\r\n//postsService: PostsService; (long method of accessing PostsService class)\r\n  private postsSub: Subscription;\r\n  private authListenerSubs: Subscription;\r\n\r\n  constructor(public postsService: PostsService, private authService: AuthService){}\r\n\r\n  ngOnInit(){\r\n    this.isLoading = true;\r\n  //Angular f(x) that automatically executes for me when it creates this component\r\n  //recommended for basic initialization tasks on ngOnInit\r\n    this.postsService.getPosts(this.postsPerPage,this.currentPage);\r\n    this.userId = this.authService.getUserId();\r\n    this.postsSub = this.postsService.getPostUpdateListener()\r\n      .subscribe((postData: {posts: Post[], postCount: number})=>{\r\n        this.isLoading = false;\r\n        this.totalPosts = postData.postCount;\r\n        this.posts = postData.posts;\r\n      }); //has 3 args (function executed whenever the new event is emitted,called when error is emitted, f(x) is called whenever the observable is completed)\r\n      this.userisAuthenticated = this.authService.getisAuth();\r\n      this.authListenerSubs = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(isAuthenticated => {\r\n        this.userisAuthenticated = isAuthenticated;\r\n        this.userId = this.authService.getUserId();\r\n      });\r\n  }\r\n\r\n  onChangedPage(pageData: PageEvent){\r\n    //console.log(pageData);\r\n    this.isLoading = true;\r\n    this.currentPage = pageData.pageIndex + 1;\r\n    this.postsPerPage = pageData.pageSize;\r\n    this.postsService.getPosts(this.postsPerPage,this.currentPage);\r\n  }\r\n\r\n  onDelete(postId: string){\r\n\r\n    this.postsService.deletePost(postId).subscribe(()=>{\r\n      this.postsService.getPosts(this.postsPerPage, this.currentPage);\r\n    }, () => {\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.postsSub.unsubscribe(); //to prevent memory leaks\r\n    this.authListenerSubs.unsubscribe();\r\n  }\r\n}\r\n","//centralized some tasks and\r\n//have easy access to data from within the different\r\n//components without the need of event & prop. binding\r\n\r\nimport { Post } from './post.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs'; //event emitter from rxjs on a broader scale\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment';\r\n\r\n//The pckage rxjs is all about Observables. Objects that help us pass data around\r\n\r\n//Using Global Angular Config.\r\n\r\nconst BACKEND_URL = environment.apiUrl + \"/posts/\"; //common URL paths for HTTP API\r\n\r\n\r\n@Injectable({providedIn: 'root'}) //Angular doesn't only find it but it\r\n//creates the instance of service for the entire app\r\nexport class PostsService{\r\n    private posts: Post[] = [];\r\n    private postsUpdated = new Subject<{posts: Post[], postCount: number}>(); //eventemitter\r\n\r\n    constructor(private http: HttpClient, private router: Router) {}\r\n\r\n    getPosts(postsPerPage: number, currentPage: number){\r\n      //return [...this.posts];\r\n      const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\r\n      this.http\r\n      .get<{message: string, posts: any, maxPosts: number}>(\r\n        BACKEND_URL + queryParams\r\n      )\r\n      .pipe(\r\n        map((postData) => {\r\n          return { posts: postData.posts.map((post: any) => { //return to array of posts\r\n            return {\r\n              title: post.title,\r\n              content: post.content,\r\n              id: post._id,\r\n              imagePath: post.imagePath,\r\n              creator: post.creator\r\n            };\r\n          }), maxPosts: postData.maxPosts\r\n        };\r\n      })) //a method that accepts multiple operators\r\n      .subscribe(transformedPostData => {\r\n        console.log(transformedPostData);\r\n        this.posts = transformedPostData.posts;\r\n        this.postsUpdated.next({\r\n          posts: [...this.posts],\r\n          postCount: transformedPostData.maxPosts\r\n        });\r\n      });\r\n    }\r\n\r\n    getPostUpdateListener(){ //listening on the Subject\r\n      return this.postsUpdated.asObservable();\r\n    }\r\n\r\n    getPost(id: string){\r\n      return this.http.get<{_id: string; title:string; content: string; imagePath: string; creator: string;}>( BACKEND_URL + id);\r\n    }\r\n\r\n    addPost(title: string, content: string, image: File){\r\n      //const post: Post = {id: null,title: title, content: content};\r\n      const postData = new FormData(); //JSON can't include a file. So, instead of sending JSON, I'll send FormData\r\n      //Prop. that we're trying to access on the backend, 'post.js'\r\n      postData.append('title', title);\r\n      postData.append('content', content);\r\n      postData.append('image', image, title);\r\n      this.http\r\n      .post<{message: string, post: Post}>(BACKEND_URL, postData) //instead of PostId: string\r\n      .subscribe((myData) => {\r\n        /*const post: Post = {\r\n          id: myData.post.id,\r\n          title: title,\r\n          content: content,\r\n          imagePath: myData.post.imagePath\r\n        };\r\n        //const id = myData.postId; //adding post with an ID\r\n        //post.id = id;\r\n        this.posts.push(post);\r\n        this.postsUpdated.next([...this.posts]);*/ //emits a new value\r\n        this.router.navigate(['/']); //nav back to the homepage\r\n      });\r\n\r\n    }\r\n\r\n    updatePost(id: string, title: string, content: string, image: File | string){\r\n        //const post: Post = {id: id,title: title, content: content, imagePath: null};\r\n        let postData: Post | FormData;\r\n        if(typeof(image)==='object'){\r\n          postData = new FormData();\r\n          postData.append('id', id);\r\n          postData.append('title', title);\r\n          postData.append('content', content);\r\n          postData.append('image', image, title);\r\n        } else{\r\n          postData = {\r\n            id: id,\r\n            title: title,\r\n            content: content,\r\n            imagePath: image,\r\n            creator: null\r\n          };\r\n        }\r\n\r\n        this.http\r\n        .put(BACKEND_URL + id, postData)\r\n        .subscribe(response => { //console.log(response)\r\n          /*const updatedPosts = [...this.posts];\r\n          const oldPostIndex = updatedPosts.findIndex(p => p.id===id);\r\n          const post: Post = {\r\n            id: id,\r\n            title: title,\r\n            content: content,\r\n            imagePath: ''\r\n          }\r\n          updatedPosts[oldPostIndex] = post;\r\n          this.posts = updatedPosts;\r\n          this.postsUpdated.next([...this.posts]);*/\r\n          this.router.navigate(['/']);\r\n      });\r\n    }\r\n\r\n    deletePost(postId: string){\r\n\r\n      return this.http\r\n      .delete(BACKEND_URL + postId);\r\n      /*.subscribe(() => {\r\n       const updatedPosts = this.posts.filter(post => post.id !== postId);\r\n       //allows us to only return a subset of that posts array and we pass an arg, a f(x) to the filter\r\n       //this f(x) will be executed for every post in the array, and if it returns true, then this element\r\n       //will be kept. False, then this ele will not be part of the new filtered post array (aka post will not appear at frontend when deleted)\r\n       this.posts = updatedPosts;\r\n       this.postsUpdated.next([...this.posts]);\r\n       //send a new posts updated notice to the rest of the app\r\n     });*/\r\n\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n//THIS IS A CONFIG SETTINGS FOR ENVIRONMENT VARIABLES\n\nexport const environment = {\n  production: true,\n  apiUrl: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}