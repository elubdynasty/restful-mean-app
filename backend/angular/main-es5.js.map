{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/error/error.component.html","src/app/header/header.component.html","src/app/posts/post-create/post-create.component.html","src/app/posts/post-list/post-list.component.html","node_modules/tslib/tslib.es6.js","src/app/angular-material.module.ts","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/auth/auth-interceptor.ts","src/app/auth/auth.guard.ts","src/app/auth/auth.service.ts","src/app/error-interceptor.ts","src/app/error/error.component.css","src/app/error/error.component.ts","src/app/header/header.component.css","src/app/header/header.component.ts","src/app/posts.module.ts","src/app/posts/post-create/mime-type.validator.ts","src/app/posts/post-create/post-create.component.css","src/app/posts/post-create/post-create.component.ts","src/app/posts/post-list/post-list.component.css","src/app/posts/post-list/post-list.component.ts","src/app/posts/posts.service.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["var map = {\n\t\"./auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\",\n\t\t\"auth-auth-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","export default \"<app-header></app-header>\\r\\n<main>\\r\\n\\r\\n  <!-->\\r\\n  <app-post-create (postCreated)=\\\"onPostAdded($event)\\\"></app-post-create> $event - to pass on the data you're getting. An event-binding to listen to postCreated\\r\\n  <app-post-list [posts]=\\\"storedPosts\\\"></app-post-list>\\r\\n  Commented 9/8/19 no need for event-prop binding due to PostsService connection\\r\\n\\r\\n  <app-post-create></app-post-create>\\r\\n  <app-post-list></app-post-list><-->\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n</main>\\r\\n\"","export default \"<h1 mat-dialog-title>An Error occurred!</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p mat-body-1>{{ data.message }}</p>\\r\\n</div>\\r\\n\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button mat-dialog-close>Okay</button>\\r\\n</div>\\r\\n\"","export default \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <span><a routerLink=\\\"/\\\">MyMessage</a></span>\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n  <ul>\\r\\n    <li *ngIf=\\\"userisAuthenticated\\\">\\r\\n      <a mat-button routerLink=\\\"/create\\\" routerLinkActive=\\\"mat-accent\\\">New Post</a>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"!userisAuthenticated\\\">\\r\\n      <a mat-button routerLink=\\\"/auth/login\\\" routerLinkActive=\\\"mat-accent\\\">Login</a>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"!userisAuthenticated\\\">\\r\\n      <a mat-button routerLink=\\\"/auth/signup\\\" routerLinkActive=\\\"mat-accent\\\">Sign-up</a>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"userisAuthenticated\\\">\\r\\n      <button mat-button (click)=\\\"onLogout()\\\">Logout</button>\\r\\n    </li>\\r\\n  </ul>\\r\\n</mat-toolbar>\\r\\n\"","export default \"<h2>The Post Create Component</h2>\\r\\n\\r\\n\\r\\n<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onSavePost()\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n        matInput\\r\\n        type=\\\"text\\\"\\r\\n        formControlName=\\\"title\\\"\\r\\n        placeholder=\\\"Post Title\\\">\\r\\n        <mat-error *ngIf=\\\"form.get('title').invalid\\\">Please enter a post title.</mat-error>\\r\\n        <!-->instead of \\\"title.invalid\\\"<-->\\r\\n    </mat-form-field>\\r\\n    <div>\\r\\n      <button mat-stroked-button type=\\\"button\\\" (click)=\\\"filePicker.click()\\\">Pick image</button>\\r\\n      <input type=\\\"file\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\r\\n    </div>\\r\\n    <div class=\\\"img-display\\\" >\\r\\n      <img [src]=\\\"imgDisplay\\\" [alt]=\\\"form.value.title\\\" *ngIf=\\\"imgDisplay !== '' && imgDisplay && form.get('image').valid\\\">\\r\\n    </div>\\r\\n    <mat-form-field>\\r\\n      <textarea\\r\\n        matInput\\r\\n        rows=\\\"4\\\"\\r\\n        formControlName=\\\"content\\\"\\r\\n        placeholder=\\\"Post Content\\\">\\r\\n      </textarea>\\r\\n        <mat-error *ngIf=\\\"form.get('content').invalid\\\">Please enter a post content.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button\\r\\n      mat-raised-button\\r\\n      color = \\\"primary\\\"\\r\\n      type=\\\"submit\\\">Save Post</button>\\r\\n\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","export default \"\\r\\n<!--><mat-accordion><-->\\r\\n<mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n<mat-accordion multi=\\\"true\\\" *ngIf=\\\"posts.length > 0 && !isLoading\\\">\\r\\n  <mat-expansion-panel *ngFor=\\\"let post of posts\\\"> <!-- *ngFor loops this element><-->\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        {{ post.title }}\\r\\n      </mat-panel-title>\\r\\n    </mat-expansion-panel-header>\\r\\n    <div class=\\\"post-image\\\">\\r\\n      <img [src]=\\\"post.imagePath\\\" [alt]=\\\"post.title\\\">\\r\\n    </div>\\r\\n    <p>{{ post.content }}</p>\\r\\n\\r\\n    <mat-action-row *ngIf = \\\"userisAuthenticated && userId === post.creator\\\">\\r\\n      <a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/edit',post.id]\\\">EDIT</a>\\r\\n      <button mat-button color=\\\"warn\\\" (click)='onDelete(post.id)'>DELETE</button>\\r\\n    </mat-action-row>\\r\\n\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n<mat-paginator [length]=\\\"totalPosts\\\" [pageSize]=\\\"postsPerPage\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"onChangedPage($event)\\\" *ngIf=\\\"posts.length > 0\\\"></mat-paginator>\\r\\n<p class=info-text *ngIf=\\\"posts.length <= 0 && !isLoading\\\">No posts added yet!</p>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\r\nimport {NgModule} from '@angular/core';\r\nimport { MatInputModule, MatCardModule, MatButtonModule, MatToolbarModule, MatExpansionModule,MatProgressSpinnerModule, MatPaginatorModule, MatDialogModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule\r\n  ],\r\n  exports: [ //to be usable in another module (need to be re-exported)\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule\r\n  ]\r\n})\r\n\r\n\r\n\r\nexport class AngularMaterialModule{\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PostListComponent } from './posts/post-list/post-list.component';\r\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\r\nimport {AuthGuard} from './auth/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PostListComponent }, //'' means main page\r\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard]}, //localhost:4200/create\r\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard]},\r\n  { path: 'auth', loadChildren: './auth/auth.module#AuthModule'} //lazily loads the child module located at AuthModule\r\n    //alternative path () => import('./auth/auth.module').then(m => m.AuthModule)\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    AuthGuard\r\n  ]\r\n})\r\n\r\nexport class AppRoutingModule {  }\r\n","export default \"main{\\r\\n\\r\\n  width: 80%;\\r\\n  margin: 16px auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsVUFBVTtFQUNWLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWFpbntcclxuXHJcbiAgd2lkdGg6IDgwJTtcclxuICBtYXJnaW46IDE2cHggYXV0bztcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n//import { Post } from './posts/post.model';\n\n//Decorator starts with @\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  constructor (private authService: AuthService){}\n  //title = 'vincemeanprac1';\n  /*storedPosts: Post[]=[];\n\n  onPostAdded(post: Post){\n    this.storedPosts.push(post);\n  } Commented 9/8/19 bec. event-prop binding no longer needed*/\n  ngOnInit(){\n    this.authService.autoAuthUser();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { PostsModule } from './posts.module';\r\nimport { AuthInterceptor } from './auth/auth-interceptor';\r\nimport { ErrorInterceptor } from './error-interceptor';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    ErrorComponent,\r\n  ],\r\n  imports: [\r\n\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AngularMaterialModule,\r\n    PostsModule\r\n\r\n  ],\r\n  //any collection of services is for providers.\r\n  //allows Angular to find the service\r\n  //Option 1 if you're not using @Injectable Decorator for the Service\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ErrorComponent] //informs Angular that this comp is going to get used, eventhough Ang can't see it\r\n})\r\nexport class AppModule { }\r\n\r\n//it defines the feature\r\n","import {HttpInterceptor, HttpRequest, HttpHandler} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n  constructor(private authService: AuthService){}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler){ //Angular will call this method for req leaving the App. Interceptor works a lot like middleware, just for outgoing instead of incoming requests.\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set('Authorization', \"Bearer \" + authToken) //extracting the token from Authorization on the back-end (check-auth)\r\n    });\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {AuthService} from './auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n\r\n  constructor(private authService: AuthService, private router: Router){}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | Observable<boolean> | Promise<boolean>{\r\n    const isAuth = this.authService.getisAuth();\r\n    if(!isAuth){\r\n      this.router.navigate(['./auth/login']);\r\n    }\r\n    return isAuth;\r\n    //throw new Error('Method not implemented');\r\n  }\r\n}\r\n","//connecting Angular Auth service to the backend\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthData } from './auth-data.model';\r\nimport { Subject } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst BACKEND_URL = environment.apiUrl + \"/user/\"; //common URL paths for HTTP API\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private token: string; //adding the token to auth requests\r\n  private tokenTimer: any;\r\n  private userId: string;\r\n  private authStatusListener = new Subject<boolean>(); //is the user authenticated or not\r\n\r\n  constructor(private http: HttpClient, private router: Router){}\r\n\r\n  getToken(){\r\n    return this.token;\r\n  }\r\n\r\n  getisAuth(){\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getUserId(){\r\n    return this.userId;\r\n  }\r\n\r\n  getAuthStatusListener(){ //return the observable\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  createUser(email: string, password: string){\r\n    const authData: AuthData = {email: email, password: password};\r\n    this.http.post(BACKEND_URL + 'signup', authData)\r\n    .subscribe(()=>{\r\n      this.router.navigate[\"/\"]; //redirection on signup comp. when signup successful\r\n    }, error=>{\r\n      this.authStatusListener.next(); //push the false value to entire app and inform that this will not be authenticated\r\n    });\r\n  }\r\n\r\n  login(email: string, password: string){\r\n    const authData: AuthData = {email: email, password: password};\r\n    this.http.post<{token: string, expiresIn: number, userId: string}>(BACKEND_URL + 'login', authData)\r\n    .subscribe(response=>{\r\n      const token = response.token;\r\n      this.token = token;\r\n      if(token){\r\n        const expiresInDuration = response.expiresIn;\r\n        this.setAuthTimer(expiresInDuration);\r\n        this.isAuthenticated=true;\r\n        this.userId = response.userId;\r\n        this.authStatusListener.next(true); //informing everyone w/c component is interested abt the user being authenticated\r\n        const now = new Date();\r\n        const expirationDate = new Date(now.getTime() + expiresInDuration*1000);\r\n        console.log(expirationDate);\r\n        this.saveAuthData(token, expirationDate, this.userId);\r\n        this.router.navigate(['/']); //nav back to the homepage\r\n      }\r\n    }, error=>{\r\n      this.authStatusListener.next(); //push the false value to entire app and inform that this will not be authenticated\r\n    });\r\n  }\r\n\r\n  autoAuthUser(){\r\n    //automatically auth the user if we got the info for it in the localStorage\r\n    const authInformation = this.getAuthData();\r\n    if(!authInformation){\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\r\n    //console.log(authInformation, expiresIn);\r\n    if(expiresIn > 0){\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.userId = authInformation.userId;\r\n      this.setAuthTimer(expiresIn/1000);\r\n      this.authStatusListener.next(true);\r\n\r\n    }\r\n  }\r\n\r\n  logout(){\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    //informing everyone w/c component is interested abt the user being not authenticated anymore (exiting login)\r\n    this.userId = null;\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearAuthData();\r\n    this.router.navigate(['/']); //nav back to the homepage\r\n\r\n  }\r\n\r\n  private setAuthTimer(duration: number){\r\n    console.log('Setting timer: '+ duration);\r\n    this.tokenTimer = setTimeout(()=>{\r\n      this.logout();\r\n    }, duration * 1000);\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date, userId: string){\r\n    localStorage.setItem('token', token);  //data will be serialized and stored in local storage\r\n    localStorage.setItem('expiration', expirationDate.toISOString());\r\n    localStorage.setItem('userId', userId);\r\n  }\r\n\r\n  private clearAuthData(){\r\n    localStorage.removeItem('token');  //data will be serialized and stored in local storage\r\n    localStorage.removeItem('expiration');\r\n    localStorage.removeItem('userId');\r\n  }\r\n\r\n  private getAuthData(){\r\n    const token = localStorage.getItem('token');\r\n    const expirationDate= localStorage.getItem('expiration');\r\n    const userId = localStorage.getItem('userId');\r\n    if(!token || !expirationDate){\r\n      return;\r\n    }\r\n    return{\r\n      token: token,\r\n      expirationDate: new Date(expirationDate),\r\n      userId: userId\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse} from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport {MatDialog /*, MatDialogRef, MAT_DIALOG_DATA*/} from '@angular/material';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor{\r\n\r\n  constructor(private dialog: MatDialog){} //inject the dialog service and import it from @angular mat\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler){ //Angular will call this method for req leaving the App. Interceptor works a lot like middleware, just for outgoing instead of incoming requests.\r\n\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse)=>{\r\n        let errorMessage = 'An unknown error occurred!';\r\n\r\n        //console.log(error);\r\n        //alert(error.error.message);\r\n\r\n        if(error.error.message){\r\n          errorMessage = error.error.message;\r\n        }\r\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\r\n        return throwError(error); //returning an observable\r\n      })\r\n    );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5jc3MifQ== */\"","\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  //selector: 'app-root',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\n\r\nexport class ErrorComponent{\r\n  //message = 'An unknown error occurred!';\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}){} //USING MAT DIALOG DATA TOKEN to identify this data you're passing around\r\n}\r\n","export default \"ul {\\r\\n  list-style: none;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nul{\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInVsIHtcclxuICBsaXN0LXN0eWxlOiBub25lO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5hIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG51bHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG4iXX0= */\"","import { Component,OnInit,OnDestroy } from '@angular/core';\r\nimport {AuthService} from '../auth/auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\n\r\n\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  userisAuthenticated = false;\r\n\r\n  private authListenerSubs: Subscription;\r\n  constructor(private authService: AuthService){}\r\n\r\n\r\n  ngOnInit(){ //setting up the subscription to that AuthStatusListener\r\n    this.userisAuthenticated=this.authService.getisAuth();\r\n    this.authListenerSubs = this.authService\r\n    .getAuthStatusListener()\r\n    .subscribe(isAuthenticated => {\r\n      this.userisAuthenticated = isAuthenticated;\r\n    });\r\n  }\r\n\r\n  onLogout(){\r\n    this.authService.logout(); //should clear the token and inform the interested part of the page,\r\n                               //it's about to change the authentication status\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authListenerSubs.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { PostCreateComponent } from './posts/post-create/post-create.component';  //need to explicitly register this component so that the build process will able to scan the ts with app-post-create selector on it\r\nimport { PostListComponent } from './posts/post-list/post-list.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\nimport { RouterModule} from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [ //to be usable in another module (need to be re-exported)\r\n    PostCreateComponent,\r\n    PostListComponent\r\n  ],\r\n\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class PostsModule{}\r\n","//validator that validates the img mime-type if\r\n//this is e.g (.jpg or .png)\r\n//Logic behind this validator\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer, of} from 'rxjs';\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => { //async validator that wraps with promises/observable (Generic type).\r\n  if(typeof(control.value)==='string'){\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = Observable.create((observer: Observer<{ [key: string]: any }>) => {\r\n    //rxjs gives something w/c allows the coder to convert this into observable. Thus, u can create Observable from scratch\r\n    //this observer is simply a tool you use to control when observable emits new data\r\n    fileReader.addEventListener(\"loadend\", () => { //equiv to fileReader.onloadend()\r\n      //MIME type validation\r\n      const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0,4); //allows us to access or to read certain patterns in the file but also in the form metadata that we can then use to parse the MIME type\r\n      let header = \"\";\r\n      let isValid = false;\r\n\r\n      for(let i=0; i < arr.length; i++){\r\n        //extract some info on the arr\r\n        header += arr[i].toString(16); //convert this lists of array into hexadecimal string\r\n      }\r\n\r\n      switch(header){\r\n        case \"89504e47\":\r\n          isValid = true;\r\n          break;\r\n        case \"ffd8ffe0\":\r\n        case \"ffd8ffe1\":\r\n        case \"ffd8ffe2\":\r\n        case \"ffd8ffe3\":\r\n        case \"ffd8ffe8\":\r\n          isValid = true;\r\n          break;\r\n        default:\r\n          isValid = false; // Or you can use the blob.type as fallback\r\n          break;\r\n      }\r\n      if(isValid){\r\n        observer.next(null); //to emit a new value\r\n      } else{\r\n        observer.next( {invalidMimeType: true} );\r\n      }\r\n      observer.complete(); //letting subscribers know that these observers are done\r\n    });;\r\n    fileReader.readAsArrayBuffer(file); //allow to access the mimeType\r\n  });\r\n  return frObs;\r\n};\r\n","export default \"\\r\\nmat-form-field, textarea{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\ninput[type=\\\"file\\\"]{\\r\\n  visibility: hidden;\\r\\n}\\r\\n\\r\\n.img-display{\\r\\n  height: 5 rem;\\r\\n  margin: 1rem 0;\\r\\n}\\r\\n\\r\\n.img-display img{\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsY0FBYztBQUNoQjs7QUFFQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3QtY3JlYXRlL3Bvc3QtY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxubWF0LWZvcm0tZmllbGQsIHRleHRhcmVhe1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtc3Bpbm5lcntcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJmaWxlXCJde1xyXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcclxufVxyXG5cclxuLmltZy1kaXNwbGF5e1xyXG4gIGhlaWdodDogNSByZW07XHJcbiAgbWFyZ2luOiAxcmVtIDA7XHJcbn1cclxuXHJcbi5pbWctZGlzcGxheSBpbWd7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","//more than just the template but it needs the template\r\nimport { Component, OnInit, OnDestroy /*EventEmitter, Output*/} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Post } from '../post.model';\r\nimport { PostsService } from '../posts.service';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { mimeType } from './mime-type.validator';\r\nimport { Subscription } from 'rxjs';\r\nimport {AuthService} from '../../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-post-create',\r\n  templateUrl:'./post-create.component.html',\r\n  styleUrls: ['./post-create.component.css']\r\n})\r\n\r\n //Reference as the url instead to cop-paste the html body\r\n\r\nexport class PostCreateComponent implements OnInit, OnDestroy {\r\n  //a variable within the class that doesn't need var, const or let\r\n\r\n  //enteredTitle=\"\";\r\n  //enteredContent=\"\";\r\n  //(Commented as of 9/8/19 due to added PostsService) @Output() postCreated = new EventEmitter<Post>(); generic type with Post (we can pass addt'l data on what data type this one works with)\r\n  //this will emit to the listener from the outside\r\n  //newPost = 'NO CONTENT';\r\n  isLoading=false;\r\n  form: FormGroup;\r\n  imgDisplay: string;\r\n  mode ='create';\r\n  private postId: string;\r\n  post: Post;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public postsService: PostsService, public route: ActivatedRoute, private authService: AuthService){} //this router pkg, ActivatedRoute gives us this activated route obj and this holds some important info abt the route we're currently on\r\n\r\n  ngOnInit(){ //Good for initialization tasks\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\r\n      authStatus=>{\r\n        this.isLoading = false;\r\n      }\r\n    ); //setup an AuthStatusListener\r\n    this.form = new FormGroup({\r\n      title: new FormControl(null,\r\n        {\r\n          validators: [Validators.required,Validators.minLength(3)]\r\n        }), //first arg is beginning form state. 2nd arg to attach validators\r\n      content: new FormControl(null,\r\n        {\r\n          validators: [Validators.required]\r\n        }),\r\n\r\n      image: new FormControl(null,\r\n        {\r\n          validators: [Validators.required],\r\n          asyncValidators: [mimeType]\r\n        })\r\n\r\n    });\r\n\r\n    this.route.paramMap.subscribe((paramMap: ParamMap)=>{\r\n      if(paramMap.has('postId')){\r\n        this.mode = 'edit';\r\n        this.postId=paramMap.get('postId');\r\n        this.isLoading=true;\r\n        this.postsService.getPost(this.postId).subscribe(postData=>{\r\n          this.isLoading=false;\r\n          this.post = {\r\n            id: postData._id,\r\n            title: postData.title,\r\n            content: postData.content,\r\n            imagePath: postData.imagePath,\r\n            creator: postData.creator\r\n          };\r\n          this.form.setValue({\r\n            title: this.post.title,\r\n            content: this.post.content,\r\n            image: this.post.imagePath\r\n          });\r\n       });\r\n\r\n      }\r\n      else{\r\n        this.mode='create';\r\n        this.postId=null;\r\n      }\r\n    });  //can listen to changes in th route url or in the params.. therefore react to that & update the UI\r\n  }\r\n\r\n  //adding image controls to store the image\r\n  //no need to import Event bcos its a Javascript type\r\n  onImagePicked(event: Event){\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({image: file}); //unlike setValue, you set the value for the single input or control\r\n    this.form.get('image').updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imgDisplay = reader.result as string;\r\n    } //async code. It takes a while why the author uses callback f(x)\r\n    reader.readAsDataURL(file); //kickoff the process w/c will lead to the event that being fired above\r\n\r\n    //console.log(file);\r\n    //console.log(this.form);\r\n  }\r\n\r\n  onSavePost(){\r\n\r\n    //Getting user input\r\n    //this.newPost = this.enteredValue; Instead of putting postInput.value\r\n    if(this.form.invalid){\r\n      return;\r\n    }\r\n    /*const post: Post = {\r\n      title: form.value.title,  //this.enteredTitle\r\n      content: form.value.content\r\n    }; Don't need this because it's initialized already at PostsService*/\r\n    this.isLoading=true;\r\n    if(this.mode==='create'){\r\n      this.postsService.addPost(\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      );\r\n\r\n    } else{\r\n      this.postsService.updatePost(\r\n        this.postId,\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      );\r\n    }\r\n\r\n    this.form.reset(); //auto-reset the form after addPost\r\n    //(Commented as of 9/8/19 due to added PostsService) this.postCreated.emit(post); passes the post as an argument (but no longer needed because there;s a service already)\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe(); //to prevent memory leaks\r\n\r\n  }\r\n}\r\n","export default \":host{\\r\\n  display: block;\\r\\n  margin-top: 16px;\\r\\n}\\r\\n\\r\\n.info-text{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nmat-spinner{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.post-image{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.post-image img{\\r\\n  width: 100%;\\r\\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\nmat-paginator{\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1saXN0L3Bvc3QtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7RUFDWCwwQ0FBMEM7QUFDNUM7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9wb3N0cy9wb3N0LWxpc3QvcG9zdC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tdG9wOiAxNnB4O1xyXG59XHJcblxyXG4uaW5mby10ZXh0e1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxubWF0LXNwaW5uZXJ7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG4ucG9zdC1pbWFnZXtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnBvc3QtaW1hZ2UgaW1ne1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJveC1zaGFkb3c6IDFweCAxcHggNXB4IHJnYmEoMCwgMCwgMCwgMC41KTtcclxufVxyXG5cclxubWF0LXBhZ2luYXRvcntcclxuICBtYXJnaW4tdG9wOiAxcmVtO1xyXG59XHJcbiJdfQ== */\"","import { Component, /*Input,*/ OnInit,OnDestroy} from '@angular/core';\r\nimport { PageEvent } from '@angular/material';\r\nimport { Post } from '../post.model';\r\nimport { PostsService } from '../posts.service';\r\nimport {AuthService} from '../../auth/auth.service';\r\nimport { Subscription } from 'rxjs'; //store subscription in the new property\r\n\r\n@Component({\r\n  selector: 'app-post-list',\r\n  templateUrl:'./post-list.component.html',\r\n  styleUrls: ['./post-list.component.css']\r\n})\r\n\r\n //Reference as the url instead to cop-paste the html body\r\n\r\nexport class PostListComponent implements OnInit, OnDestroy { //lifecycle hooks\r\n//  posts = [\r\n//    {title: '1st Post', content: 'This is the 1st post\\'s content'},\r\n//    {title: '2nd Post', content: 'This is the 2nd post\\'s content'},\r\n//    {title: '3rd Post', content: 'This is the 3rd post\\'s content'}\r\n//  ];\r\n\r\n  /*@Input()*/\r\n  posts: Post[]=[];\r\n  isLoading = false;\r\n  totalPosts = 0;\r\n  postsPerPage = 2;\r\n  currentPage = 1;\r\n  pageSizeOptions = [1,2,5,10];\r\n  userId: string;\r\n  userisAuthenticated = false;\r\n\r\n//bind the post from the outside by adding another Decorator Input\r\n//Dependency injection from PostsService to the components\r\n\r\n//postsService: PostsService; (long method of accessing PostsService class)\r\n  private postsSub: Subscription;\r\n  private authListenerSubs: Subscription;\r\n\r\n  constructor(public postsService: PostsService, private authService: AuthService){}\r\n\r\n  ngOnInit(){\r\n    this.isLoading = true;\r\n  //Angular f(x) that automatically executes for me when it creates this component\r\n  //recommended for basic initialization tasks on ngOnInit\r\n    this.postsService.getPosts(this.postsPerPage,this.currentPage);\r\n    this.userId = this.authService.getUserId();\r\n    this.postsSub = this.postsService.getPostUpdateListener()\r\n      .subscribe((postData: {posts: Post[], postCount: number})=>{\r\n        this.isLoading = false;\r\n        this.totalPosts = postData.postCount;\r\n        this.posts = postData.posts;\r\n      }); //has 3 args (function executed whenever the new event is emitted,called when error is emitted, f(x) is called whenever the observable is completed)\r\n      this.userisAuthenticated = this.authService.getisAuth();\r\n      this.authListenerSubs = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(isAuthenticated => {\r\n        this.userisAuthenticated = isAuthenticated;\r\n        this.userId = this.authService.getUserId();\r\n      });\r\n  }\r\n\r\n  onChangedPage(pageData: PageEvent){\r\n    //console.log(pageData);\r\n    this.isLoading = true;\r\n    this.currentPage = pageData.pageIndex + 1;\r\n    this.postsPerPage = pageData.pageSize;\r\n    this.postsService.getPosts(this.postsPerPage,this.currentPage);\r\n  }\r\n\r\n  onDelete(postId: string){\r\n\r\n    this.postsService.deletePost(postId).subscribe(()=>{\r\n      this.postsService.getPosts(this.postsPerPage, this.currentPage);\r\n    }, () => {\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.postsSub.unsubscribe(); //to prevent memory leaks\r\n    this.authListenerSubs.unsubscribe();\r\n  }\r\n}\r\n","//centralized some tasks and\r\n//have easy access to data from within the different\r\n//components without the need of event & prop. binding\r\n\r\nimport { Post } from './post.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs'; //event emitter from rxjs on a broader scale\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment';\r\n\r\n//The pckage rxjs is all about Observables. Objects that help us pass data around\r\n\r\n//Using Global Angular Config.\r\n\r\nconst BACKEND_URL = environment.apiUrl + \"/posts/\"; //common URL paths for HTTP API\r\n\r\n\r\n@Injectable({providedIn: 'root'}) //Angular doesn't only find it but it\r\n//creates the instance of service for the entire app\r\nexport class PostsService{\r\n    private posts: Post[] = [];\r\n    private postsUpdated = new Subject<{posts: Post[], postCount: number}>(); //eventemitter\r\n\r\n    constructor(private http: HttpClient, private router: Router) {}\r\n\r\n    getPosts(postsPerPage: number, currentPage: number){\r\n      //return [...this.posts];\r\n      const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\r\n      this.http\r\n      .get<{message: string, posts: any, maxPosts: number}>(\r\n        BACKEND_URL + queryParams\r\n      )\r\n      .pipe(\r\n        map((postData) => {\r\n          return { posts: postData.posts.map((post: any) => { //return to array of posts\r\n            return {\r\n              title: post.title,\r\n              content: post.content,\r\n              id: post._id,\r\n              imagePath: post.imagePath,\r\n              creator: post.creator\r\n            };\r\n          }), maxPosts: postData.maxPosts\r\n        };\r\n      })) //a method that accepts multiple operators\r\n      .subscribe(transformedPostData => {\r\n        console.log(transformedPostData);\r\n        this.posts = transformedPostData.posts;\r\n        this.postsUpdated.next({\r\n          posts: [...this.posts],\r\n          postCount: transformedPostData.maxPosts\r\n        });\r\n      });\r\n    }\r\n\r\n    getPostUpdateListener(){ //listening on the Subject\r\n      return this.postsUpdated.asObservable();\r\n    }\r\n\r\n    getPost(id: string){\r\n      return this.http.get<{_id: string; title:string; content: string; imagePath: string; creator: string;}>( BACKEND_URL + id);\r\n    }\r\n\r\n    addPost(title: string, content: string, image: File){\r\n      //const post: Post = {id: null,title: title, content: content};\r\n      const postData = new FormData(); //JSON can't include a file. So, instead of sending JSON, I'll send FormData\r\n      //Prop. that we're trying to access on the backend, 'post.js'\r\n      postData.append('title', title);\r\n      postData.append('content', content);\r\n      postData.append('image', image, title);\r\n      this.http\r\n      .post<{message: string, post: Post}>(BACKEND_URL, postData) //instead of PostId: string\r\n      .subscribe((myData) => {\r\n        /*const post: Post = {\r\n          id: myData.post.id,\r\n          title: title,\r\n          content: content,\r\n          imagePath: myData.post.imagePath\r\n        };\r\n        //const id = myData.postId; //adding post with an ID\r\n        //post.id = id;\r\n        this.posts.push(post);\r\n        this.postsUpdated.next([...this.posts]);*/ //emits a new value\r\n        this.router.navigate(['/']); //nav back to the homepage\r\n      });\r\n\r\n    }\r\n\r\n    updatePost(id: string, title: string, content: string, image: File | string){\r\n        //const post: Post = {id: id,title: title, content: content, imagePath: null};\r\n        let postData: Post | FormData;\r\n        if(typeof(image)==='object'){\r\n          postData = new FormData();\r\n          postData.append('id', id);\r\n          postData.append('title', title);\r\n          postData.append('content', content);\r\n          postData.append('image', image, title);\r\n        } else{\r\n          postData = {\r\n            id: id,\r\n            title: title,\r\n            content: content,\r\n            imagePath: image,\r\n            creator: null\r\n          };\r\n        }\r\n\r\n        this.http\r\n        .put(BACKEND_URL + id, postData)\r\n        .subscribe(response => { //console.log(response)\r\n          /*const updatedPosts = [...this.posts];\r\n          const oldPostIndex = updatedPosts.findIndex(p => p.id===id);\r\n          const post: Post = {\r\n            id: id,\r\n            title: title,\r\n            content: content,\r\n            imagePath: ''\r\n          }\r\n          updatedPosts[oldPostIndex] = post;\r\n          this.posts = updatedPosts;\r\n          this.postsUpdated.next([...this.posts]);*/\r\n          this.router.navigate(['/']);\r\n      });\r\n    }\r\n\r\n    deletePost(postId: string){\r\n\r\n      return this.http\r\n      .delete(BACKEND_URL + postId);\r\n      /*.subscribe(() => {\r\n       const updatedPosts = this.posts.filter(post => post.id !== postId);\r\n       //allows us to only return a subset of that posts array and we pass an arg, a f(x) to the filter\r\n       //this f(x) will be executed for every post in the array, and if it returns true, then this element\r\n       //will be kept. False, then this ele will not be part of the new filtered post array (aka post will not appear at frontend when deleted)\r\n       this.posts = updatedPosts;\r\n       this.postsUpdated.next([...this.posts]);\r\n       //send a new posts updated notice to the rest of the app\r\n     });*/\r\n\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n//THIS IS A CONFIG SETTINGS FOR ENVIRONMENT VARIABLES\n\nexport const environment = {\n  production: true,\n  apiUrl: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}